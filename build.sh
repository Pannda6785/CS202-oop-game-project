#!/bin/bash

OUTPUT="main"
OUTPUT_DIR="bin"
BUILD_DIR="build"
CXX="g++"
CXXFLAGS="-std=c++17 -O2 -pipe -march=native"
LDFLAGS="-lraylib -lwinmm -lgdi32 -luser32 -lkernel32"

# T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
mkdir -p "$OUTPUT_DIR"
mkdir -p "$BUILD_DIR"

# T√¨m t·∫•t c·∫£ .cpp
SOURCES=$(find . -name "*.cpp")

# Danh s√°ch object file
OBJECTS=()

echo "üîç ƒêang t√¨m v√† bi√™n d·ªãch c√°c file ƒë√£ thay ƒë·ªïi..."

for src in $SOURCES; do
    # T·∫°o ƒë∆∞·ªùng d·∫´n object t∆∞∆°ng ·ª©ng trong build/
    obj="$BUILD_DIR/$(basename "${src%.cpp}.o")"
    OBJECTS+=("$obj")

    # Ch·ªâ bi√™n d·ªãch l·∫°i n·∫øu file .cpp m·ªõi h∆°n .o ho·∫∑c .o ch∆∞a t·ªìn t·∫°i
    if [[ "$src" -nt "$obj" ]]; then
        echo "üõ†Ô∏è  Compiling: $src ‚Üí $obj"
        $CXX $CXXFLAGS -c "$src" -o "$obj"
        if [ $? -ne 0 ]; then
            echo "‚ùå Compilation failed: $src"
            exit 1
        fi
    fi
done

# Li√™n k·∫øt l·∫°i
echo "üîó Linking to $OUTPUT_DIR/$OUTPUT.exe"
$CXX "${OBJECTS[@]}" -o "$OUTPUT_DIR/$OUTPUT.exe" $LDFLAGS

if [ $? -eq 0 ]; then
    echo "‚úÖ Build th√†nh c√¥ng: $OUTPUT_DIR/$OUTPUT.exe"
else
    echo "‚ùå Link th·∫•t b·∫°i"
    exit 1
fi